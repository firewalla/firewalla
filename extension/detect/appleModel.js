/*    Copyright 2023 Firewalla Inc.
 *
 *    This program is free software: you can redistribute it and/or  modify
 *    it under the terms of the GNU Affero General Public License, version 3,
 *    as published by the Free Software Foundation.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
'use strict';

const log = require('../../net2/logger.js')(__filename);

const modelTypeMap = {
  AppleTV:        'tv',
  AirPods:        'wearable',
  AirPodsPro:     'wearable',
  AirPodsMax:     'wearable',
  Watch:          'wearable',
  AudioAccessory: 'smart speaker',
  iPhone:         'phone',
  iPad:           'tablet',
  iPod:           'portable media player',
  iMac:           'desktop',
  Mac:            'desktop',
  MacPro:         'desktop',
  Macmini:        'desktop',
  MacBook:        'desktop',
  MacBookAir:     'desktop',
  MacBookPro:     'desktop',
}

const internalModelMap = {
  m68ap:    "iPhone1,1",
  n82ap:    "iPhone1,2",
  n88ap:    "iPhone2,1",
  n90ap:    "iPhone3,1",
  n90bap:   "iPhone3,2",
  n92ap:    "iPhone3,3",
  n94ap:    "iPhone4,1",
  n41ap:    "iPhone5,1",
  n42ap:    "iPhone5,2",
  n48ap:    "iPhone5,3",
  n49ap:    "iPhone5,4",
  n51ap:    "iPhone6,1",
  n53ap:    "iPhone6,2",
  n56ap:    "iPhone7,1",
  n61ap:    "iPhone7,2",
  n71ap:    "iPhone8,1",
  n71map:   "iPhone8,1",
  n66ap:    "iPhone8,2",
  n66map:   "iPhone8,2",
  n69ap:    "iPhone8,4",
  n69uap:   "iPhone8,4",
  d10ap:    "iPhone9,1",
  d11ap:    "iPhone9,2",
  d101ap:   "iPhone9,3",
  d111ap:   "iPhone9,4",
  d20ap:    "iPhone10,1",
  d21ap:    "iPhone10,2",
  d22ap:    "iPhone10,3",
  d201ap:   "iPhone10,4",
  d211ap:   "iPhone10,5",
  d221ap:   "iPhone10,6",
  d321ap:   "iPhone11,2",
  d331ap:   "iPhone11,4",
  d331pap:  "iPhone11,6",
  n841ap:   "iPhone11,8",
  n104ap:   "iPhone12,1",
  d421ap:   "iPhone12,3",
  d431ap:   "iPhone12,5",
  d79ap:    "iPhone12,8",
  d52gap:   "iPhone13,1",
  d53gap:   "iPhone13,2",
  d53pap:   "iPhone13,3",
  d54pap:   "iPhone13,4",
  d63ap:    "iPhone14,2",
  d64ap:    "iPhone14,3",
  d16ap:    "iPhone14,4",
  d17ap:    "iPhone14,5",
  d49ap:    "iPhone14,6",
  d27ap:    "iPhone14,7",
  d28ap:    "iPhone14,8",
  d73ap:    "iPhone15,2",
  d74ap:    "iPhone15,3",
  n45ap:    "iPod1,1",
  n72ap:    "iPod2,1",
  n18ap:    "iPod3,1",
  n81ap:    "iPod4,1",
  n78ap:    "iPod5,1",
  n102ap:   "iPod7,1",
  n112ap:   "iPod9,1",
  k48ap:    "iPad1,1",
  k93ap:    "iPad2,1",
  k94ap:    "iPad2,2",
  k95ap:    "iPad2,3",
  k93aap:   "iPad2,4",
  p105ap:   "iPad2,5",
  p106ap:   "iPad2,6",
  p107ap:   "iPad2,7",
  j1ap:     "iPad3,1",
  j2ap:     "iPad3,2",
  j2aap:    "iPad3,3",
  p101ap:   "iPad3,4",
  p102ap:   "iPad3,5",
  p103ap:   "iPad3,6",
  j71ap:    "iPad4,1",
  j72ap:    "iPad4,2",
  j73ap:    "iPad4,3",
  j85ap:    "iPad4,4",
  j86ap:    "iPad4,5",
  j87ap:    "iPad4,6",
  j85map:   "iPad4,7",
  j86map:   "iPad4,8",
  j87map:   "iPad4,9",
  j96ap:    "iPad5,1",
  j97ap:    "iPad5,2",
  j81ap:    "iPad5,3",
  j82ap:    "iPad5,4",
  j127ap:   "iPad6,3",
  j128ap:   "iPad6,4",
  j98aap:   "iPad6,7",
  j99aap:   "iPad6,8",
  j71sap:   "iPad6,11",
  j71tap:   "iPad6,11",
  j72sap:   "iPad6,12",
  j72tap:   "iPad6,12",
  j120ap:   "iPad7,1",
  j121ap:   "iPad7,2",
  j207ap:   "iPad7,3",
  j208ap:   "iPad7,4",
  j71bap:   "iPad7,5",
  j72bap:   "iPad7,6",
  j171ap:   "iPad7,11",
  j172ap:   "iPad7,12",
  j317ap:   "iPad8,1",
  j317xap:  "iPad8,2",
  j318ap:   "iPad8,3",
  j318xap:  "iPad8,4",
  j320ap:   "iPad8,5",
  j320xap:  "iPad8,6",
  j321ap:   "iPad8,7",
  j321xap:  "iPad8,8",
  j417ap:   "iPad8,9",
  j418ap:   "iPad8,10",
  j420ap:   "iPad8,11",
  j421ap:   "iPad8,12",
  j210ap:   "iPad11,1",
  j211ap:   "iPad11,2",
  j217ap:   "iPad11,3",
  j218ap:   "iPad11,4",
  j171aap:  "iPad11,6",
  j172aap:  "iPad11,7",
  j181ap:   "iPad12,1",
  j182ap:   "iPad12,2",
  j307ap:   "iPad13,1",
  j308ap:   "iPad13,2",
  j517ap:   "iPad13,4",
  j517xap:  "iPad13,5",
  j518ap:   "iPad13,6",
  j518xap:  "iPad13,7",
  j522ap:   "iPad13,8",
  j522xap:  "iPad13,9",
  j523ap:   "iPad13,10",
  j523xap:  "iPad13,11",
  j407ap:   "iPad13,16",
  j408ap:   "iPad13,17",
  j271ap:   "iPad13,18",
  j272ap:   "iPad13,19",
  j310ap:   "iPad14,1",
  j311ap:   "iPad14,2",
  j617ap:   "iPad14,3",
  j618ap:   "iPad14,4",
  j620ap:   "iPad14,5",
  j621ap:   "iPad14,6",
  k66ap:    "AppleTV2,1",
  j33ap:    "AppleTV3,1",
  j33iap:   "AppleTV3,2",
  j42dap:   "AppleTV5,3",
  j105aap:  "AppleTV6,2",
  j305ap:   "AppleTV11,1",
  j255ap:   "AppleTV14,1",
  b238aap:  "AudioAccessory1,1",
  b238ap:   "AudioAccessory1,2",
  b520ap:   "AudioAccessory5,1",
  b620ap:   "AudioAccessory6,1",
  n27aap:   "Watch1,1",
  n28aap:   "Watch1,2",
  n27dap:   "Watch2,6",
  n28dap:   "Watch2,7",
  n74ap:    "Watch2,3",
  n75ap:    "Watch2,4",
  n111sap:  "Watch3,1",
  n111bap:  "Watch3,2",
  n121sap:  "Watch3,3",
  n121bap:  "Watch3,4",
  n131sap:  "Watch4,1",
  n131bap:  "Watch4,2",
  n141sap:  "Watch4,3",
  n141bap:  "Watch4,4",
  n144sap:  "Watch5,1",
  n144bap:  "Watch5,2",
  n146sap:  "Watch5,3",
  n146bap:  "Watch5,4",
  n140sap:  "Watch5,9",
  n140bap:  "Watch5,10",
  n142sap:  "Watch5,11",
  n142bap:  "Watch5,12",
  n157sap:  "Watch6,1",
  n157bap:  "Watch6,2",
  n158sap:  "Watch6,3",
  n158bap:  "Watch6,4",
  n187sap:  "Watch6,6",
  n187bap:  "Watch6,7",
  n188sap:  "Watch6,8",
  n188bap:  "Watch6,9",
  n143sap:  "Watch6,10",
  n143bap:  "Watch6,11",
  n149sap:  "Watch6,12",
  n149bap:  "Watch6,13",
  n197sap:  "Watch6,14",
  n197bap:  "Watch6,15",
  n198sap:  "Watch6,16",
  n198bap:  "Watch6,17",
  n199ap:   "Watch6,18",
  j273aap:  "ADP3,2",
  j274ap:   "Macmini9,1",
  j293ap:   "MacBookPro17,1",
  j316sap:  "MacBookPro18,1",
  j316cap:  "MacBookPro18,2",
  j314sap:  "MacBookPro18,3",
  j314cap:  "MacBookPro18,4",
  j313ap:   "MacBookAir10,1",
  j456ap:   "iMac21,1",
  j457ap:   "iMac21,2",
  j375cap:  "Mac13,1",
  j375dap:  "Mac13,2",
  j413ap:   "Mac14,2",
  j493ap:   "Mac14,7",
  j473ap:   "Mac14,3",
  j414cap:  "Mac14,5",
  j416cap:  "Mac14,6",
  j414sap:  "Mac14,9",
  j416sap:  "Mac14,10",
  j474sap:  "Mac14,12",
  vma2macosap:  "VirtualMac2,1",
  j137ap:   "iBridge2,1",
  j680ap:   "iBridge2,3",
  j132ap:   "iBridge2,4",
  j174ap:   "iBridge2,5",
  j160ap:   "iBridge2,6",
  j780ap:   "iBridge2,7",
  j140kap:  "iBridge2,8",
  j213ap:   "iBridge2,10",
  j140aap:  "iBridge2,12",
  j152fap:  "iBridge2,14",
  j230kap:  "iBridge2,15",
  j214kap:  "iBridge2,16",
  j185ap:   "iBridge2,19",
  j185fap:  "iBridge2,20",
  j223ap:   "iBridge2,21",
  j215ap:   "iBridge2,22",
  j327ap:   "AppleDisplay2,1",
}

// just get the type now
function modelToType(identifier) {
  try {
    const main = identifier.split(',')[0]
    let i = 0
    while (main[i] < '0' || main[i] > '9') {
      i ++
    }
    return modelTypeMap[main.substring(0, i)]
  } catch(err) {
    log.error('Error convering model', identifier, err)
    return null
  }
}

function internalToModel(internalCode) {
  return internalModelMap[internalCode.toLowerCase()]
}

module.exports = {
  modelToType,
  internalToModel,
}

