#!/bin/bash -
: ${FIREWALLA_HOME:=/home/pi/firewalla}

mkdir -p "$HOME/.firewalla"
sudo rm -r -f /tmp/*
sudo rm -r -f /home/pi/.forever/*
cd $FIREWALLA_HOME
branch=$(git rev-parse --abbrev-ref HEAD)
cd /tmp 
if [ ! -f $FIREWALLA_HOME/bin/dev ]; then
  if [[ $branch =~ release.* ]]
    then
     export FWPRODUCTION=$branch
     cp $FIREWALLA_HOME/bin/real/bitbridge4 $FIREWALLA_HOME/bin/.
     cp $FIREWALLA_HOME/bin/mock/bitbridge6 $FIREWALLA_HOME/bin/.
    else
     cp $FIREWALLA_HOME/bin/real/bitbridge4 $FIREWALLA_HOME/bin/.
     cp $FIREWALLA_HOME/bin/real/bitbridge6 $FIREWALLA_HOME/bin/.
  fi
else
     cp $FIREWALLA_HOME/bin/mock/* $FIREWALLA_HOME/bin/.
fi
#For testing only
#export FWPRODUCTION=$branch
nohup sudo ~/firewalla/bin/bitbridge6 -R -l eth0 &
sudo ip6tables -I OUTPUT -p icmpv6 --icmpv6-type redirect -j DROP
cd $FIREWALLA_HOME
if [ ! -f $FIREWALLA_HOME/node_modules/stats-lite/stats.js ]; then
    echo "Updating NPM Stats"
    npm install stats-lite --save
fi
if [ ! -f $FIREWALLA_HOME/node_modules/cron/package.json ]; then
    echo "Updating NPM CRON"
    npm install cron --save
fi
if [ ! -f $FIREWALLA_HOME/node_modules/nat-pmp/package.json ]; then
    echo "Updating NPM CRON"
    npm install nat-pmp 
    npm install nat-upnp 
fi
if [ ! -f $FIREWALLA_HOME/node_modules/mobile-detect/package.json ]; then
    echo "Updating NPM MOBILE-DETECT"
    npm install mobile-detect --save
fi
if [ ! -f $FIREWALLA_HOME/node_modules/socket.io-client/package.json ]; then
    echo "Updating NPM MOBILE-DETECT"
    npm install socket.io-client@1.4.8
fi
if [ ! -f $FIREWALLA_HOME/node_modules/bleno/package.json ]; then
    echo "Updating NPM BLENO"
    sudo cp $FIREWALLA_HOME/config/netbot.config /encipher.config/.
    sudo apt-get install -y bluetooth bluez libbluetooth-dev libudev-dev
    npm install bleno --save
    sudo setcap cap_net_raw+eip $(eval readlink -f `which nodejs`)
fi

function check_upgrade {
    PACKAGE_NAME=$1
    PACKAGE_VERSION=$2
    if [ ! -f $FIREWALLA_HOME/node_modules/$PACKAGE_NAME/package.json ]; then
        echo "Updating NPM $PACKAGE_NAME"
        npm install $PACKAGE_NAME@$PACKAGE_VERSION
    fi
}

function check_upgrade2 {
    PACKAGE_NAME=$1
    PACKAGE_VERSION=$2
    if [ ! -f $FIREWALLA_HOME/node_modules/$PACKAGE_NAME/__FW ]; then
        echo "Updating NPM $PACKAGE_NAME"
        npm install $PACKAGE_NAME@$PACKAGE_VERSION
        echo $PACKAGE_VERSION > $FIREWALLA_HOME/node_modules/$PACKAGE_NAME/__FW
    fi
}


check_upgrade external-ip ^0.2.4
check_upgrade jsonfile ^2.4.0
check_upgrade2 lodash ^4.17.2
check_upgrade2 random-seed 0.3.0
check_upgrade2 pty.js 0.3.1

if ! fgrep '"version": "0.3.1",' $FIREWALLA_HOME/node_modules/network/package.json &>/dev/null; then
    npm install network@git+https://git@github.com/melvinto/network.git
fi

sudo setcap cap_net_raw+eip $(eval readlink -f `which nodejs`)
cd net2
forever start  --uid main  -c "/usr/bin/node --expose-gc"  ./main.js
cd ..
cd sys
#forever start  --uid ui kickstart.js --config /encipher.config/netbot.config
#forever start --uid kickstart -a -l ui.log  -c '/usr/bin/nodejs --expose-gc' ./kickstart.js --config /encipher.config/netbot.config
sudo systemctl start firekick
cd ..
cd monitor
#forever start --uid monitor -c "/usr/bin/node --expose-gc" ./MonitorMain.js 
#forever start --uid monitor MonitorMain.js 
sudo systemctl start firemon
cd ..
if [[ $branch =~ release.* ]] 
   then
    echo "Release branch skipping api"      
   else
    check_upgrade swagger-node-express ~2.0
    check_upgrade minimist 1.2.x
    check_upgrade express ^4.14.0
    check_upgrade body-parser 1.9.x
    check_upgrade passport 0.3.2
    check_upgrade passport-http-bearer 1.0.1
    check_upgrade debug 2.2.0
    check_upgrade serve-favicon 2.3.0
    check_upgrade jade 1.11.0
    echo "Master branch running api"      
    cd api
##       sudo systemctl start fireapi
    cd ..
fi

sudo /usr/local/bro/bin/broctl cron
sudo /usr/local/bro/bin/broctl cron enable
sync
sudo service ntp stop
sudo ntpd -gq
sudo service ntp start
sync
